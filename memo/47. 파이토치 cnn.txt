[채널과 필터의 정확한 역할과 관계]
이 과정을 단계별로 나누어 보면 명확해집니다.

1. 입력 (Input)
우리는 모델에 **입력 데이터(Input Feature Map)**를 제공합니다.

이 데이터는 (N, C_in, H, W) 형태를 가집니다.

여기서 C_in이 바로 입력 채널입니다. 최초의 이미지라면 이 값은 흑백일 때 1, 컬러(RGB)일 때 3이 됩니다.

2. 처리 (Processing)
nn.Conv2d 레이어에는 **사용자가 지정한 개수만큼의 필터(Filter)**가 들어있습니다. 예를 들어 nn.Conv2d(in_channels=3, out_channels=16, kernel_size=3)라고 정의했다면, 이 레이어는 16개의 필터를 가집니다.

이 16개의 필터 각각이 입력 데이터(3개의 채널을 가진) 위를 훑고 지나가면서 특징을 추출합니다.

1번 필터는 수직선을 찾는 역할을 할 수 있습니다.

2번 필터는 녹색 계열의 둥근 모서리를 찾는 역할을 할 수 있습니다.

...

16번 필터는 특정 질감을 찾는 역할을 할 수 있습니다.

3. 출력 (Output)
하나의 필터는 **하나의 특징 맵(Feature Map)**을 만들어냅니다.

우리가 16개의 필터를 사용했으므로, 결과적으로 16개의 특징 맵이 생성됩니다.

이 16개의 특징 맵을 쌓아 올린 것이 바로 이 레이어의 **최종 출력(Output Feature Map)**이 됩니다.

따라서, 출력 데이터의 shape은 (N, 16, H_out, W_out)이 되며, 여기서 16이 바로 출력 채널의 수가 됩니다.

결론적으로, 출력 채널의 수는 우리가 레이어에 사용한 필터의 개수와 정확히 같습니다

======================================================================================================================================================================
[필터와 커널의 미묘한 차이]
커널 (Kernel): 더 작은 단위. 단일 채널을 처리하기 위한 2D 가중치 행렬을 의미합니다. kernel_size 파라미터가 바로 이 커널의 가로, 세로 크기를 지정합니다 (예: 3x3, 5x5).

필터 (Filter): 더 큰 단위. 모든 입력 채널을 한 번에 처리하기 위한 **커널들의 묶음(stack)**을 의미합니다.

이 관계를 입력 데이터가 3채널(RGB) 컬러 이미지인 경우에 빗대어 설명해 보겠습니다.

입력 데이터: (3, 32, 32) 형태의 RGB 이미지가 있습니다. 이 이미지는 R 채널, G 채널, B 채널이라는 3개의 층으로 이루어져 있습니다.

커널: 이 이미지의 R 채널을 위한 3x3 커널, G 채널을 위한 3x3 커널, B 채널을 위한 3x3 커널이 각각 존재합니다.

필터: 이 3개의 3x3 커널들을 하나로 묶은 (3, 3, 3) 크기의 3D 묶음이 바로 하나의 필터가 됩니다. 이 필터가 3채널 이미지 전체와 합성곱 연산을 수행하여 **하나의 특징 맵(Feature Map)**을 만들어냅니다.

따라서, **필터는 여러 개의 커널로 구성된 완전한 '특징 추출 도구'**라고 할 수 있습니다.

비유로 이해하기
3D 영화를 보는 상황을 상상해 보세요.

커널: 왼쪽 눈에만 파란색을 보여주는 '파란색 렌즈'와 오른쪽 눈에만 빨간색을 보여주는 '빨간색 렌즈' 각각이 커널입니다.

필터: 이 두 개의 렌즈(커널)가 합쳐져 하나의 완전한 기능을 하는 3D 안경이 바로 필터입니다.

PyTorch nn.Conv2d에서의 의미
nn.Conv2d(in_channels=3, out_channels=16, kernel_size=3) 레이어를 정의했을 때, 각 용어는 다음과 같이 매핑됩니다.

in_channels=3: 입력 데이터의 채널이 3개임을 의미합니다.

kernel_size=3: 각 커널의 크기가 3x3임을 의미합니다.

out_channels=16: 이 레이어가 16개의 필터를 가지고 있음을 의미합니다.

이 레이어의 내부 구조를 풀어보면, 각각의 필터는 3개의 3x3 커널을 묶음으로 가지고 있습니다. 따라서 이 레이어에는 총 16(필터) * 3(커널/필터) = 48개의 3x3 커널이 존재하는 셈입니다.
======================================================================================================================================================================
[파라미터 갯수 구하는 법]
최초 input channel 갯수 = 1 또는 3 (흑백 또는 컬러이므로)
input channel 갯수 = 이전 레이어의 output channel 갯수
output channel 갯수 = 사용자 설정
filter 갯수 = output channel 갯수
bais 갯수 = filter 갯수
kernel 갯수 = (input channel 갯수) x (filter 갯수)
weight 갯수 = (kernel 갯수) x (filter 높이) x (filter 너비)

파라미터 갯수 =	weight 갯수 + bias 갯수
